"use strict";(()=>{var e={};e.id=855,e.ids=[855],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},4770:e=>{e.exports=require("crypto")},7702:e=>{e.exports=require("events")},2615:e=>{e.exports=require("http")},8791:e=>{e.exports=require("https")},8216:e=>{e.exports=require("net")},8621:e=>{e.exports=require("punycode")},6162:e=>{e.exports=require("stream")},2452:e=>{e.exports=require("tls")},7360:e=>{e.exports=require("url")},1568:e=>{e.exports=require("zlib")},8164:(e,r,a)=>{a.r(r),a.d(r,{originalPathname:()=>h,patchFetch:()=>f,requestAsyncStorage:()=>g,routeModule:()=>p,serverHooks:()=>y,staticGenerationAsyncStorage:()=>m});var t={};a.r(t),a.d(t,{GET:()=>d,POST:()=>u});var n=a(9303),o=a(8716),i=a(670),s=a(7070),c=a(1926),l=a(1463);async function d(e){console.log("Supabase URL available:",!0),console.log("Supabase Anon Key available:",!0),console.log("Supabase Service Role Key available:",!!process.env.SUPABASE_SERVICE_ROLE_KEY),console.log("supabaseAdmin client available:",!!c.pR);let{searchParams:r}=new URL(e.url),a="true"===r.get("force");if(!c.pR)return s.NextResponse.json({error:"Service role key not configured"},{status:500});try{if(a){console.log("Force refresh requested, generating new crowd density data");let e=await (0,l.Z)();if("error"in e)throw console.error("Error in updateCrowdDensityData during force refresh:",e.error),Error(`Failed to update crowd density data: ${e.error}`);console.log("Fetching fresh data after forced update");let{data:r,error:a}=await c.pR.from("crowd_density").select("*").order("updated_at",{ascending:!1});if(a)throw console.error("Error fetching fresh data after force refresh:",a),a;return s.NextResponse.json(r)}let{data:e,error:r}=await c.pR.from("crowd_density").select("*").order("updated_at",{ascending:!1});if(r)throw console.error("Supabase select error:",r),r;let t=new Date(Date.now()-3e5).toISOString();if(e&&e.length>0&&e[0].updated_at>t)return console.log("Using recent data from database"),s.NextResponse.json(e);console.log("Generating new crowd density data");let n=await (0,l.Z)();if("error"in n)throw console.error("Error in updateCrowdDensityData:",n.error),Error(`Failed to update crowd density data: ${n.error}`);console.log("Fetching fresh data after update");let{data:o,error:i}=await c.pR.from("crowd_density").select("*").order("updated_at",{ascending:!1});if(i)throw console.error("Error fetching fresh data:",i),i;return s.NextResponse.json(o)}catch(e){console.error("Error fetching crowd density:",e);try{console.log("Calculating crowd density directly (fallback)");let e=await (0,l.X)();return s.NextResponse.json(e)}catch(e){return console.error("Error calculating crowd density:",e),s.NextResponse.json({error:"Error fetching crowd density data"},{status:500})}}}async function u(e){if(console.log("POST request to crowd-density API"),!c.pR)return console.error("No supabaseAdmin client in POST handler"),s.NextResponse.json({error:"Service role key not configured"},{status:500});try{let r=await e.json();if(!0===r.recalculate){console.log("Recalculation request received");let e=await (0,l.Z)();if("error"in e)throw console.error("Failed to recalculate crowd density:",e.error),Error(`Failed to recalculate crowd density: ${e.error}`);return console.log("Recalculation successful:",e),s.NextResponse.json({success:!0,message:"Crowd density data recalculated",count:e.count})}if(console.log("Manual entry request received"),!r.location_name||!r.coordinates||!r.density_level)return s.NextResponse.json({error:"Missing required fields"},{status:400});let{data:a,error:t}=await c.pR.from("crowd_density").upsert({location_name:r.location_name,coordinates:r.coordinates,density_level:r.density_level,updated_at:new Date().toISOString(),crowd_size:r.crowd_size||null,occupancy_percentage:r.occupancy_percentage||null,meta_data:r.meta_data||null}).select();if(t)throw console.error("Error during upsert operation:",t),t;return s.NextResponse.json(a)}catch(e){return console.error("Error updating crowd density:",e),s.NextResponse.json({error:"Error updating crowd density data"},{status:500})}}let p=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/crowd-density/route",pathname:"/api/crowd-density",filename:"route",bundlePath:"app/api/crowd-density/route"},resolvedPagePath:"C:\\Users\\kiing\\Documents\\GitHub\\tafweej_Hajj\\src\\app\\api\\crowd-density\\route.ts",nextConfigOutput:"export",userland:t}),{requestAsyncStorage:g,staticGenerationAsyncStorage:m,serverHooks:y}=p,h="/api/crowd-density/route";function f(){return(0,i.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:m})}},1463:(e,r,a)=>{a.d(r,{X:()=>c,Z:()=>l});var t=a(1926);let n={"Masjid al-Haram":{areaInSquareMeters:356800,capacity:15e5,sections:[{id:"mataf",name:"Mataf Area",percentage:.15},{id:"ground",name:"Ground Floor",percentage:.45},{id:"first",name:"First Floor",percentage:.25},{id:"roof",name:"Roof Area",percentage:.15}]},Mina:{areaInSquareMeters:812e3,capacity:12e5,sections:[{id:"tents-a",name:"Tents Area A",percentage:.3},{id:"tents-b",name:"Tents Area B",percentage:.3},{id:"tents-c",name:"Tents Area C",percentage:.3},{id:"services",name:"Services Area",percentage:.1}]},"Jamaraat Bridge":{areaInSquareMeters:52e3,capacity:3e5,sections:[{id:"lower",name:"Lower Level",percentage:.3},{id:"middle",name:"Middle Level",percentage:.4},{id:"upper",name:"Upper Level",percentage:.3}]},Arafat:{areaInSquareMeters:1456e3,capacity:25e5,sections:[{id:"jabal",name:"Jabal al-Rahmah",percentage:.2},{id:"nimrah",name:"Nimrah",percentage:.3},{id:"uranah",name:"Uranah",percentage:.25},{id:"other",name:"Other Areas",percentage:.25}]},Muzdalifah:{areaInSquareMeters:623e3,capacity:1e6,sections:[{id:"mash",name:"Al-Mash'ar al-Haram",percentage:.3},{id:"north",name:"Northern Area",percentage:.35},{id:"south",name:"Southern Area",percentage:.35}]},"Mina Entrance Gate 1":{areaInSquareMeters:3e3,capacity:2e4,sections:[{id:"entry",name:"Entry Points",percentage:.4},{id:"security",name:"Security Check",percentage:.3},{id:"waiting",name:"Waiting Area",percentage:.3}]},"Tent City Section A":{areaInSquareMeters:12e4,capacity:18e4,sections:[{id:"a1",name:"Block A1",percentage:.25},{id:"a2",name:"Block A2",percentage:.25},{id:"a3",name:"Block A3",percentage:.25},{id:"a4",name:"Block A4",percentage:.25}]},"Jamarat Central Access":{areaInSquareMeters:8e3,capacity:5e4,sections:[{id:"entry",name:"Entry Zone",percentage:.4},{id:"corridor",name:"Main Corridor",percentage:.4},{id:"exit",name:"Exit Zone",percentage:.2}]}},o={low:.5,medium:1,high:2},i={beforePrayer:2,duringPrayer:2.5,afterPrayer:1.8,jamarat:3,tawaf:2.5,night:.7,earlyMorning:.8,hajjDay:3},s={hot:.9,pleasant:1.2};async function c(){let e=new Date,r=e.getHours(),a=Object.keys(n),t=1;r>=22||r<4?t=i.night:r>=4&&r<6?t=i.earlyMorning:[5,12,15,18,20].includes(r)?t=i.duringPrayer:[6,13,16,19,21].includes(r)?t=i.afterPrayer:[4,11,14,17,19].includes(r)&&(t=i.beforePrayer);let c=[6,7,8,13,14,15,16],l=[5,6,7,21,22,23],d=5===e.getDay(),u=e.getMinutes()%3==0,p=1;return r>=11&&r<=15?p=s.hot:r>=16&&r<=18&&(p=s.pleasant),a.map((a,s)=>{let g,m;let y=n[a],h=t;switch("Jamaraat Bridge"===a&&c.includes(r)?h=i.jamarat:"Masjid al-Haram"===a&&l.includes(r)?h=i.tawaf:"Arafat"===a&&(d||u)&&(h=i.hajjDay),a){case"Masjid al-Haram":g=.7+r%3*.1;break;case"Jamaraat Bridge":g=c.includes(r)?.9:.5;break;case"Mina":g=d||u?.95:.6;break;case"Arafat":g=d||u?.98:.3;break;case"Muzdalifah":g=r>=18&&r<=23?.85:.4;break;default:g=.4+e.getMinutes()%10/10}s%5==0?(g=.9,h=2):s%5==1?(g=.7,h=1.5):s%5==2?(g=1,h=2.5):s%5==3&&(g=.4,h=1);let f=g*h*p*(.95+.1*Math.random()),w=Math.floor(f*y.capacity),_=w/y.areaInSquareMeters;m=_<=o.low?"low":_<=o.medium?"medium":_<=o.high?"high":"critical";let S=y.sections.map(e=>{let r;let a=_*(.9+.2*Math.random());return r=a<=o.low?"low":a<=o.medium?"medium":a<=o.high?"high":"critical",{id:e.id,name:e.name,density:a.toFixed(2),density_level:r,crowd_size:Math.floor(w*e.percentage)}}),M={"Masjid al-Haram":{lng:39.826174,lat:21.422487},Mina:{lng:39.892966,lat:21.413249},"Jamaraat Bridge":{lng:39.873485,lat:21.42365},Arafat:{lng:39.984687,lat:21.355461},Muzdalifah:{lng:39.936322,lat:21.383082},"Mina Entrance Gate 1":{lng:39.887235,lat:21.411856},"Tent City Section A":{lng:39.889124,lat:21.414501},"Jamarat Central Access":{lng:39.871952,lat:21.42385}}[a]||{lng:39.826174,lat:21.422487};return{location_name:a,coordinates:{lng:M.lng+(5e-4*Math.random()-25e-5),lat:M.lat+(5e-4*Math.random()-25e-5)},density:_.toFixed(2),density_level:m,crowd_size:w,capacity:y.capacity,occupancy_percentage:(100*f).toFixed(1),sections:S,timestamp:new Date().toISOString()}})}async function l(){try{console.log("Starting updateCrowdDensityData");let e=await c();if(console.log(`Generated ${e.length} density data points`),console.log("Current density levels:"),e.forEach(e=>{console.log(`${e.location_name}: ${e.density_level} (${e.density})`)}),!t.pR)return console.error("Supabase admin client not available"),{error:"Supabase admin client not available"};console.log("Attempting to clear existing data");let{error:r}=await t.pR.from("crowd_density").delete().neq("id",0);if(r)return console.error("Error clearing existing data:",r),{error:r};console.log("Preparing data for insertion");let a=e.map(e=>({location_name:e.location_name,coordinates:e.coordinates,density_level:e.density_level,updated_at:new Date().toISOString(),crowd_size:e.crowd_size,occupancy_percentage:e.occupancy_percentage,meta_data:{density:e.density,capacity:e.capacity,sections:e.sections}}));console.log("Attempting to insert data into Supabase");let{error:n}=await t.pR.from("crowd_density").insert(a);if(n)return console.error("Error inserting crowd density data:",n),{error:n};return console.log("Successfully updated crowd density data"),{success:!0,count:e.length}}catch(e){return console.error("Error in updateCrowdDensityData:",e),{error:e}}}},1926:(e,r,a)=>{a.d(r,{pR:()=>i});var t=a(1518);let n="https://uowkmsvtqrsyblobsazw.supabase.co",o=process.env.SUPABASE_SERVICE_ROLE_KEY,i=((0,t.eI)(n,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVvd2ttc3Z0cXJzeWJsb2JzYXp3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU0Mzc2NTgsImV4cCI6MjA2MTAxMzY1OH0.EBQ3Pn9yvN2L6G5HTe5c10bGOF8xs28jQ-plE1g8HOc"),o?(0,t.eI)(n,o,{auth:{autoRefreshToken:!1,persistSession:!1}}):null)}};var r=require("../../../webpack-runtime.js");r.C(e);var a=e=>r(r.s=e),t=r.X(0,[276,135],()=>a(8164));module.exports=t})();